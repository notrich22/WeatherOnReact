[{"C:\\Users\\NotRich22\\Desktop\\АКАДЕМИЯ\\JS Frameworks\\Экзамен\\WeatherOnReact\\src\\index.js":"1","C:\\Users\\NotRich22\\Desktop\\АКАДЕМИЯ\\JS Frameworks\\Экзамен\\WeatherOnReact\\src\\reportWebVitals.js":"2","C:\\Users\\NotRich22\\Desktop\\АКАДЕМИЯ\\JS Frameworks\\Экзамен\\WeatherOnReact\\src\\App.jsx":"3","C:\\Users\\NotRich22\\Desktop\\АКАДЕМИЯ\\JS Frameworks\\Экзамен\\WeatherOnReact\\src\\weatherHandler.js":"4"},{"size":544,"mtime":1666002106392,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1665999555276,"results":"7","hashOfConfig":"6"},{"size":1295,"mtime":1666003881183,"results":"8","hashOfConfig":"6"},{"size":1821,"mtime":1666003925890,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"vfz6wm",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\NotRich22\\Desktop\\АКАДЕМИЯ\\JS Frameworks\\Экзамен\\WeatherOnReact\\src\\index.js",["25"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport Weather from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Weather/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","C:\\Users\\NotRich22\\Desktop\\АКАДЕМИЯ\\JS Frameworks\\Экзамен\\WeatherOnReact\\src\\reportWebVitals.js",[],[],"C:\\Users\\NotRich22\\Desktop\\АКАДЕМИЯ\\JS Frameworks\\Экзамен\\WeatherOnReact\\src\\App.jsx",["26"],[],"import React from 'react';\nimport weatherHandler from \"./weatherHandler\";\nimport './Weather.css';\nclass Weather extends React.Component{\n  \n  \n\n  render(){\n    return <div classNameName=\"App\">\n      <section className=\"contentPanel\">\n        <div className=\"gridContainer\">\n            <div className=\"weatherForm\">\n                <h2>Enter <span>city</span> for the weather broadcast</h2>\n                <div id=\"WeatherContainer\">\n                    <div className=\"formControl\">\n                        <input id =\"chosenCity\" type=\"text\" defaultValue=\"Moscow\" autoComplete=\"off\"/>\n                    </div>\n                    <input id =\"submitBtn\" className=\"forecastBtn\" onClick={weatherHandler} type=\"submit\" defaultValue=\"\"/>\n                </div>\n            </div>\n    \n            <div className=\"forecastResult\">\n                <ul>\n                    <li id=\"city\"></li>\n                    <hr/>\n                    <li id=\"state\"></li>\n                    <li><img id=\"image\"/></li>\n                    <li id=\"temperature\"></li>\n                    <li id=\"feelsLike\"></li>\n                    <li id=\"wind\"></li>\n                    <li id=\"humidity\"></li>\n                </ul>\n            </div>\n        </div>\n    </section>\n    </div>\n  }\n}\n\nexport default Weather;\n","C:\\Users\\NotRich22\\Desktop\\АКАДЕМИЯ\\JS Frameworks\\Экзамен\\WeatherOnReact\\src\\weatherHandler.js",["27","28"],[],"import axios from 'axios';\r\nasync function getWeather(city) {\r\n    const API_key = \"1195410e4ae2d05ce024d37aa18407de\";\r\n    const url = \"http://api.openweathermap.org/data/2.5/weather?q=\"+city+\"&appid=\"+API_key;\r\n    console.log(url);\r\n    const response = await axios.get(url).catch(async(error) =>{\r\n        console.log(error.toJSON());\r\n        return undefined;\r\n    })\r\n    return response;\r\n}\r\nexport async function  WeatherBtnPressed(){\r\n    let city = document.getElementById(\"city\");\r\n    if(document.getElementById(\"chosenCity\").value == \"\"){\r\n        alert(\"Enter city\");\r\n        return;\r\n    }\r\n    let state = document.getElementById(\"state\");\r\n    let temperature = document.getElementById(\"temperature\");\r\n    let feelsLike = document.getElementById(\"feelsLike\");\r\n    let wind = document.getElementById(\"wind\");\r\n    let humidity = document.getElementById(\"humidity\");\r\n    let image = document.getElementById(\"image\");\r\n    \r\n    let weather = await getWeather(document.getElementById(\"chosenCity\").value);\r\n\r\n    if(weather == undefined){\r\n        alert(\"Something went wrong!\");\r\n        return;\r\n    }\r\n    console.log(weather);\r\n    image.src = \"https://api.openweathermap.org/img/w/\" + weather.data.weather[0].icon + \".png\";\r\n    city.innerText = document.getElementById(\"chosenCity\").value;\r\n    state.innerText = weather.data.weather[0].description;\r\n    temperature.innerHTML = \"Temperature: \" + Math.round(weather.data.main.temp - 273.15) + \"°C\";\r\n    feelsLike.innerText = \"Feels like: \" + Math.round(weather.data.main.temp - 273.15) + \"°C\";\r\n    wind.innerText = \"Wind: \" + Math.round(weather.data.wind.speed) + \" м/с\";\r\n    humidity.innerText = \"Humidity: \" + weather.data.main.humidity + \" %\";\r\n\r\n}\r\nwindow.addEventListener(\"load\", WeatherBtnPressed);\r\nexport default WeatherBtnPressed;",{"ruleId":"29","severity":1,"message":"30","line":5,"column":8,"nodeType":"31","messageId":"32","endLine":5,"endColumn":23},{"ruleId":"33","severity":1,"message":"34","line":27,"column":25,"nodeType":"35","endLine":27,"endColumn":42},{"ruleId":"36","severity":1,"message":"37","line":14,"column":52,"nodeType":"38","messageId":"39","endLine":14,"endColumn":54},{"ruleId":"36","severity":1,"message":"37","line":27,"column":16,"nodeType":"38","messageId":"39","endLine":27,"endColumn":18},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]